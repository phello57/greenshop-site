"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgulp_test1"] = self["webpackChunkgulp_test1"] || []).push([["src_js_modules_shop-calculate_js"],{

/***/ "./src/js/modules/shop-calculate.js":
/*!******************************************!*\
  !*** ./src/js/modules/shop-calculate.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shopCalc\": () => (/* binding */ shopCalc)\n/* harmony export */ });\n\r\n// === Карточки\r\nconst allPrices = document.querySelectorAll(\".cart__price\") \r\nconst allQuantities = [...document.querySelectorAll(\".cart__quantity\")]\r\nconst allTotals = [...document.querySelectorAll(\".cart__total\")]\r\nconst wrapperCount = document.querySelectorAll(\".cart__quantity-wrapper\");\r\n\r\n// === Калькулятор со скидками  и доставкой\r\nconst subTotal = document.querySelector('.js_calc-cost__subtotal')\r\nconst coupon = document.querySelector('.js_calc-cost__coupon')\r\nconst shipping = document.querySelector('.js_calc-cost__shipping')\r\nconst endTotal = document.querySelector('.js_calc-cost__endtotal')\r\n\r\n// Принцип - при нажатии кнопок +- количества товара пересчитывается вся страница\r\nconst shopCalc = {\r\n  start: function () {\r\n    shopCalc.calcAllTotals();\r\n    shopCalc.calcEndTotal()\r\n    wrapperCount.forEach((el) => {\r\n      el.onclick = (event) => {\r\n        let target = event.target;\r\n        const step = 1;\r\n        if (target.classList.contains(\"js__btn-change-count-more\")) {\r\n          target.previousElementSibling.innerHTML = Number(target.previousElementSibling.innerHTML) + step;\r\n\r\n          shopCalc.reCalculateByQuontity();\r\n          shopCalc.calcAllTotals();\r\n          shopCalc.calcEndTotal()\r\n        } else if (target.nextElementSibling.innerHTML == 1) {return} \r\n        else if (target.classList.contains(\"js__btn-change-count-less\"))\r\n        target.nextElementSibling.innerHTML = Number(target.nextElementSibling.innerHTML) - step;\r\n            \r\n          shopCalc.reCalculateByQuontity();\r\n          shopCalc.calcAllTotals();\r\n          shopCalc.calcEndTotal()\r\n      };\r\n    });\r\n  },\r\n\r\n  reCalculateByQuontity() {\r\n    allPrices.forEach((el,index) => {\r\n      const price = +el.outerText.slice(1)\r\n      const result = +allQuantities[index].innerHTML * price\r\n      allTotals[index].innerHTML = `$${result}.00`\r\n    });\r\n  },\r\n\r\n  calcAllTotals() {\r\n    let result = 0\r\n    allTotals.forEach((el) => {\r\n      let cutNumberEl = +el.outerText.slice(1)\r\n      result += cutNumberEl\r\n      subTotal.innerHTML = `$${result}.00`\r\n    })\r\n  },\r\n\r\n  calcEndTotal() {\r\n    let subtotal = +subTotal.outerText.slice(1)\r\n    let couponSail = +coupon.outerText.slice(4)\r\n    let shippingToDoor = +shipping.outerText.slice(1)\r\n    endTotal.innerHTML = `$${subtotal - couponSail + shippingToDoor}.00`\r\n  },\r\n}\n\n//# sourceURL=webpack://gulp-test1/./src/js/modules/shop-calculate.js?");

/***/ })

}]);